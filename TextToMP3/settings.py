"""
Django settings for TextToMP3 project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from .utils import get_secret

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
PROD = True

# Load important environment variables
if PROD:
    env_vars = get_secret('texttomp3')

    SECRET_KEY = env_vars['DJANGO_SECRET']

    # Set AWS credentials for production
    AWS_ACCESS_KEY_ID = env_vars['AWS_ACCESS_KEY_ID']
    AWS_SECRET_ACCESS_KEY = env_vars['AWS_SECRET_ACCESS_KEY']
    AWS_REGION = env_vars['AWS_DEFAULT_REGION']
    MEDIA_S3_BUCKET = env_vars['MEDIA_S3_BUCKET']
    STATIC_S3_BUCKET = env_vars['STATIC_S3_BUCKET']
    LAMBDA_POLLY_FUNCTION_ARN = env_vars['LAMBDA_POLLY_FUNCTION_ARN']
    CLOUDFRONT_PUBLIC_KEY_ID = env_vars['CLOUDFRONT_PUBLIC_KEY_ID']
    CLOUDFRONT_DISTRIBUTION_DOMAIN = env_vars['CLOUDFRONT_DISTRIBUTION_DOMAIN']
    CLOUDFRONT_PRIVATE_KEY_SECRET_NAME = env_vars['CLOUDFRONT_PRIVATE_KEY_SECRET_NAME']

    # Database configuration for production
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': env_vars['PROD_POSTGRES_DB'],
            'USER': env_vars['PROD_POSTGRES_USER'],
            'PASSWORD': env_vars['PROD_POSTGRES_PASS'],
            'HOST': env_vars['PROD_POSTGRES_HOST'],
            'PORT': '5432',  # default postgres port
        }
    }

    # Set allowed hosts and trusted origins.
    ALLOWED_HOSTS = [env_vars['DOMAIN_NAME'], '127.0.0.1']
    ALLOWED_CIDR_NETS = [env_vars['IP_RANGE']]
    CSRF_TRUSTED_ORIGINS = ['https://' + env_vars['DOMAIN_NAME'], 'http://127.0.0.1']

    # Static files
    AWS_S3_CUSTOM_DOMAIN = STATIC_S3_BUCKET + '.s3.amazonaws.com'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/' # can't use f-string here for some reason
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
else:
    SECRET_KEY = os.getenv('DJANGO_SECRET')

    # Set AWS credentials for development
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_REGION = os.getenv('AWS_DEFAULT_REGION')
    MEDIA_S3_BUCKET = os.getenv('MEDIA_S3_BUCKET')
    STATIC_S3_BUCKET = os.getenv('STATIC_S3_BUCKET')
    LAMBDA_POLLY_FUNCTION_ARN = os.getenv('LAMBDA_POLLY_FUNCTION_ARN')
    CLOUDFRONT_PUBLIC_KEY_ID = os.getenv('CLOUDFRONT_PUBLIC_KEY_ID')
    CLOUDFRONT_DISTRIBUTION_DOMAIN = os.getenv('CLOUDFRONT_DISTRIBUTION_DOMAIN')
    CLOUDFRONT_PRIVATE_KEY_SECRET_NAME = os.getenv('CLOUDFRONT_PRIVATE_KEY_SECRET_NAME')

    # Database configuration for development
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DEV_POSTGRES_DB'),
            'USER': os.getenv('DEV_POSTGRES_USER'),
            'PASSWORD': os.getenv('DEV_POSTGRES_PASS'),
            'HOST': os.getenv('DEV_POSTGRES_HOST'),
            'PORT': '5432', # default postgres port
        }
    }

    # Set allowed hosts and trusted origins.
    ALLOWED_HOSTS = [os.getenv('DOMAIN_NAME'), '127.0.0.1']
    ALLOWED_CIDR_NETS = [os.getenv('IP_RANGE')]
    CSRF_TRUSTED_ORIGINS = ['https://' + os.getenv('DOMAIN_NAME'), 'http://127.0.0.1']

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.2/howto/static-files/
    STATIC_URL = 'http://127.0.0.1:8002/static/'
    STATIC_ROOT = BASE_DIR / 'static' # used for collectstatic

    MEDIA_URL = 'http://127.0.0.1:8002/media/'
    MEDIA_ROOT = BASE_DIR / 'media'

    # Logging configuration
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'loggers': {
            'django': {
                'handlers': ['console'],
                'level': 'DEBUG',  # Change to 'INFO' if you want to see fewer log messages
                'propagate': True,
            },
            'TextToMP3-Django': {  # Replace 'your_app_name' with the name of your Django app
                'handlers': ['console'],
                'level': 'DEBUG',
                'propagate': True,
            },
        },
    }

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'base.apps.BaseConfig',
    'storages',
]

AUTH_USER_MODEL = 'base.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allow_cidr.middleware.AllowCIDRMiddleware',
]

ROOT_URLCONF = 'TextToMP3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TextToMP3.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
